{
  "openapi": "3.0.1",
  "info": {
    "title": "EvvaCore API",
    "description": "API para gerenciamento de hosts, projetos e workflows",
    "version": "v1"
  },
  "paths": {
    "/api/v1/Host": {
      "get": {
        "tags": ["Host"],
        "summary": "Lista todos os hosts",
        "responses": {
          "200": {
            "description": "Lista de hosts retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Host"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Host"],
        "summary": "Cria um novo host",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Host"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Host criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Host/{id}": {
      "get": {
        "tags": ["Host"],
        "summary": "Obtém um host específico",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Host encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Host"
                }
              }
            }
          },
          "404": {
            "description": "Host não encontrado"
          }
        }
      },
      "put": {
        "tags": ["Host"],
        "summary": "Atualiza um host",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Host"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Host atualizado com sucesso"
          },
          "404": {
            "description": "Host não encontrado"
          }
        }
      },
      "delete": {
        "tags": ["Host"],
        "summary": "Remove um host",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Host removido com sucesso"
          },
          "404": {
            "description": "Host não encontrado"
          }
        }
      }
    },
    "/api/v1/User": {
      "get": {
        "tags": ["User"],
        "summary": "Lista todos os usuários",
        "responses": {
          "200": {
            "description": "Lista de usuários retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Cria um novo usuário",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/User/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Obtém um usuário específico",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Atualiza um usuário",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Remove um usuário",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário removido com sucesso"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      }
    },
    "/api/v1/Token": {
      "get": {
        "tags": ["Token"],
        "summary": "Lista todos os tokens",
        "responses": {
          "200": {
            "description": "Lista de tokens retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Token"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Token"],
        "summary": "Cria um novo token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Token"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Token/{id}": {
      "get": {
        "tags": ["Token"],
        "summary": "Obtém um token específico",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "404": {
            "description": "Token não encontrado"
          }
        }
      },
      "put": {
        "tags": ["Token"],
        "summary": "Atualiza um token",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Token"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token atualizado com sucesso"
          },
          "404": {
            "description": "Token não encontrado"
          }
        }
      },
      "delete": {
        "tags": ["Token"],
        "summary": "Remove um token",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token removido com sucesso"
          },
          "404": {
            "description": "Token não encontrado"
          }
        }
      }
    },
    "/api/v1/DockerConfig": {
      "get": {
        "tags": ["DockerConfig"],
        "summary": "Lista todas as configurações Docker",
        "responses": {
          "200": {
            "description": "Lista de configurações Docker retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DockerConfig"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["DockerConfig"],
        "summary": "Cria uma nova configuração Docker",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DockerConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Configuração Docker criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/DockerConfig/{id}": {
      "get": {
        "tags": ["DockerConfig"],
        "summary": "Obtém uma configuração Docker específica",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Configuração Docker encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DockerConfig"
                }
              }
            }
          },
          "404": {
            "description": "Configuração Docker não encontrada"
          }
        }
      },
      "put": {
        "tags": ["DockerConfig"],
        "summary": "Atualiza uma configuração Docker",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DockerConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Configuração Docker atualizada com sucesso"
          },
          "404": {
            "description": "Configuração Docker não encontrada"
          }
        }
      },
      "delete": {
        "tags": ["DockerConfig"],
        "summary": "Remove uma configuração Docker",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Configuração Docker removida com sucesso"
          },
          "404": {
            "description": "Configuração Docker não encontrada"
          }
        }
      }
    },
    "/api/v1/Project": {
      "get": {
        "tags": ["Project"],
        "summary": "Lista todos os projetos",
        "responses": {
          "200": {
            "description": "Lista de projetos retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Project"],
        "summary": "Cria um novo projeto",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Projeto criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Project/{id}": {
      "get": {
        "tags": ["Project"],
        "summary": "Obtém um projeto específico",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Projeto encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "404": {
            "description": "Projeto não encontrado"
          }
        }
      },
      "put": {
        "tags": ["Project"],
        "summary": "Atualiza um projeto",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Projeto atualizado com sucesso"
          },
          "404": {
            "description": "Projeto não encontrado"
          }
        }
      },
      "delete": {
        "tags": ["Project"],
        "summary": "Remove um projeto",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Projeto removido com sucesso"
          },
          "404": {
            "description": "Projeto não encontrado"
          }
        }
      }
    },
    "/api/v1/Workflow": {
      "get": {
        "tags": ["Workflow"],
        "summary": "Lista todos os workflows",
        "responses": {
          "200": {
            "description": "Lista de workflows retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Workflow"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Workflow"],
        "summary": "Cria um novo workflow",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workflow criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Workflow/{id}": {
      "get": {
        "tags": ["Workflow"],
        "summary": "Obtém um workflow específico",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          },
          "404": {
            "description": "Workflow não encontrado"
          }
        }
      },
      "put": {
        "tags": ["Workflow"],
        "summary": "Atualiza um workflow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workflow atualizado com sucesso"
          },
          "404": {
            "description": "Workflow não encontrado"
          }
        }
      },
      "delete": {
        "tags": ["Workflow"],
        "summary": "Remove um workflow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow removido com sucesso"
          },
          "404": {
            "description": "Workflow não encontrado"
          }
        }
      }
    },
    "/api/v1/ProjectWorkflow": {
      "get": {
        "tags": ["ProjectWorkflow"],
        "summary": "Lista todos os workflows de projetos",
        "responses": {
          "200": {
            "description": "Lista de workflows de projetos retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectWorkflow"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["ProjectWorkflow"],
        "summary": "Cria um novo workflow de projeto",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectWorkflow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workflow de projeto criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ProjectWorkflow/{id}": {
      "get": {
        "tags": ["ProjectWorkflow"],
        "summary": "Obtém um workflow de projeto específico",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow de projeto encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectWorkflow"
                }
              }
            }
          },
          "404": {
            "description": "Workflow de projeto não encontrado"
          }
        }
      },
      "put": {
        "tags": ["ProjectWorkflow"],
        "summary": "Atualiza um workflow de projeto",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectWorkflow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workflow de projeto atualizado com sucesso"
          },
          "404": {
            "description": "Workflow de projeto não encontrado"
          }
        }
      },
      "delete": {
        "tags": ["ProjectWorkflow"],
        "summary": "Remove um workflow de projeto",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow de projeto removido com sucesso"
          },
          "404": {
            "description": "Workflow de projeto não encontrado"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Host": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "maxLength": 25
          },
          "operatingSystem": {
            "type": "string",
            "maxLength": 40
          },
          "ipAddress": {
            "type": "string",
            "maxLength": 15
          },
          "architecture": {
            "type": "string",
            "maxLength": 10
          },
          "isActive": {
            "type": "boolean"
          },
          "port": {
            "type": "integer",
            "default": 5643
          },
          "description": {
            "type": "string",
            "maxLength": 225
          },
          "location": {
            "type": "string",
            "maxLength": 125
          }
        },
        "required": ["name", "operatingSystem", "ipAddress", "architecture", "isActive", "description", "location"]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "maxLength": 60
          },
          "username": {
            "type": "string",
            "maxLength": 25
          },
          "email": {
            "type": "string",
            "maxLength": 125
          },
          "isAdmin": {
            "type": "boolean",
            "default": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean",
            "default": true
          }
        },
        "required": ["name", "username", "email"]
      },
      "Token": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "hostId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          },
          "isAtive": {
            "type": "boolean",
            "default": true
          },
          "expiresIn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hash": {
            "type": "string",
            "maxLength": 256
          },
          "type": {
            "type": "string",
            "maxLength": 30
          }
        },
        "required": ["hash", "type"]
      },
      "DockerConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "maxLength": 32
          },
          "hostPorts": {
            "type": "string",
            "maxLength": 32
          },
          "runParams": {
            "type": "string",
            "maxLength": 32,
            "nullable": true
          },
          "containerName": {
            "type": "string",
            "maxLength": 32
          },
          "imageName": {
            "type": "string",
            "maxLength": 32
          }
        },
        "required": ["name", "hostPorts", "containerName", "imageName"]
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "maxLength": 25
          },
          "repositoryUrl": {
            "type": "string",
            "maxLength": 125,
            "nullable": true
          },
          "branch": {
            "type": "string",
            "maxLength": 125,
            "default": "main"
          },
          "targetPath": {
            "type": "string",
            "maxLength": 125
          },
          "hostId": {
            "type": "integer",
            "format": "int32"
          },
          "hostName": {
            "type": "string",
            "maxLength": 25,
            "nullable": true
          },
          "responsable": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "lastSync": {
            "type": "string",
            "format": "date-time"
          },
          "lastClone": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastPull": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastPush": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "autoAsync": {
            "type": "boolean",
            "default": false
          },
          "isDockerEnabled": {
            "type": "boolean",
            "default": false
          },
          "dockerConfig": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "required": ["name", "targetPath", "hostId", "responsable"]
      },
      "Workflow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "maxLength": 32
          },
          "command": {
            "type": "string",
            "maxLength": 225
          },
          "description": {
            "type": "string",
            "maxLength": 125,
            "nullable": true
          },
          "iconUrl": {
            "type": "string",
            "maxLength": 225,
            "nullable": true
          },
          "isLinix": {
            "type": "boolean"
          }
        },
        "required": ["name", "command", "isLinix"]
      },
      "ProjectWorkflow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "workflowId": {
            "type": "integer",
            "format": "int32"
          },
          "executionOrder": {
            "type": "integer",
            "format": "int32"
          },
          "stageName": {
            "type": "string",
            "maxLength": 20,
            "nullable": true
          }
        },
        "required": ["projectId", "workflowId", "executionOrder"]
      }
    }
  }
} 